apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx-https-demo
  labels:
    name: ingress-nginx-https-demo

---
# openssl genrsa -out demo.forsrc.com.key 2048
# openssl req -new -x509 -key demo.forsrc.com.key -out demo.forsrc.com.crt -subj /C=CN/ST=forsrc/L=forsrc/O=devops/CN=demo.forsrc.com
# kubectl create secret tls myapp -n ingress-nginx-https-demo --cert=demo.forsrc.com.crt --key=demo.forsrc.com.key


apiVersion: v1
kind: Secret
metadata:
  name: myapp
  namespace: ingress-nginx-https-demo
type: kubernetes.io/tls
data:
  # cat demo.forsrc.com.crt | base64
  tls.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsVENDQW4yZ0F3SUJBZ0lVWk9MOW1PaHV2
    MWhmV3JGeUJiWUhxZjE4SVd3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1dqRUxNQWtHQTFVRUJoTUNR
    MDR4RHpBTkJnTlZCQWdNQm1admNuTnlZekVQTUEwR0ExVUVCd3dHWm05eQpjM0pqTVE4d0RRWURW
    UVFLREFaa1pYWnZjSE14R0RBV0JnTlZCQU1NRDJSbGJXOHVabTl5YzNKakxtTnZiVEFlCkZ3MHlN
    REExTURnd016VTBORFJhRncweU1EQTJNRGN3TXpVME5EUmFNRm94Q3pBSkJnTlZCQVlUQWtOT01R
    OHcKRFFZRFZRUUlEQVptYjNKemNtTXhEekFOQmdOVkJBY01CbVp2Y25OeVl6RVBNQTBHQTFVRUNn
    d0daR1YyYjNCegpNUmd3RmdZRFZRUUREQTlrWlcxdkxtWnZjbk55WXk1amIyMHdnZ0VpTUEwR0NT
    cUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHJrNEdFRHlPR0FXdzQ4eWpKU0JrZVhM
    bWx3OHRSdXZwNmc2Sm9RclVvOTl2UDVhN1gKcmJna0Jadndub1R4b1FsK2tjbmU5UE9HcjJNY0pH
    VTZvNWpwbiszV2NUYWJJVXhWeGw5Y01XN3Q5MFdyMzFRdApiUFhzTVBTbFlnajJwdHZINnFhUlo3
    Zm4zS2xEU1J5SVlWeENIQ1JXUTFRSFlQV21VYlRFUlVrSVBTZU5OVUFDCmRpWWVFeDdlRUc3bTVx
    dTZBYlErcnJyVFMxOWVSUzNYOW8vZ05WN3VZbkdWeExUZ1ExcFFKSUllS1ZYZVNUQjQKNCthUGN5
    VWJ4RCtiM0tDUzdTUHBBVm9zbStJcjhaTHhWaDR5a042VU5BWkZpd0YveExSc2JnUEN1MldaR3Y4
    RQpQajF0SzRVd2dQcmxNVzBlMUxueUYyZEkxV0g4eFNJeGVYeEZBZ01CQUFHalV6QlJNQjBHQTFV
    ZERnUVdCQlJjCkVleFR6WU0ya0h6Yk10RHNETmRiMWVlZ1l6QWZCZ05WSFNNRUdEQVdnQlJjRWV4
    VHpZTTJrSHpiTXREc0ROZGIKMWVlZ1l6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0li
    M0RRRUJDd1VBQTRJQkFRQ0xYU3djUjI4YwptaWM5M3A0TENYdEhacWd0YmdMc2VHWXNmaHhmNmVj
    L1p6WGZTRFVsT1ptb0dnUFJha0t5ejEzc28rTWRWWmY5Cm1ySjNwcExPN0c2aGVVbzdQTjdhejJD
    bWd0dlllS0lJZFhRUGNVNENIb1h4TUV0MUhyeU54Q25TTlpsdmV3WVAKVlh1WnJtcEthMHJjKzU5
    UGxEZ0l1dFNXVmoxQlVuZ08ycWJMZEd3YitTSzZOWCtPdXFNL3NOUEJmWTd0bkZjSwpXL0gwODNT
    TUsyNXFiTjZjcktORklYK1liN1U1bFJiY2xNYUFRRGFiWjNXaEFWSUowTVRXMjVNQ09HTGxMNVlH
    CklFVlI5NzdOL1ZHR0hZY2tmdS8wYlc1YUFkdzljWC9QaVduL3RBYWRrenlQL1k1M3FkOUVwSExw
    bmhDNHRxQmUKUWRuUXBmMkRBU2VhCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  # cat demo.forsrc.com.key | base64
  tls.key:  |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNjVPQmhBOGpo
    Z0ZzT1BNb3lVZ1pIbHk1cGNQTFVicjZlb09pYUVLMUtQZmJ6K1d1CjE2MjRKQVdiOEo2RThhRUpm
    cEhKM3ZUemhxOWpIQ1JsT3FPWTZaL3QxbkUybXlGTVZjWmZYREZ1N2ZkRnE5OVUKTFd6MTdERDBw
    V0lJOXFiYngrcW1rV2UzNTl5cFEwa2NpR0ZjUWh3a1ZrTlVCMkQxcGxHMHhFVkpDRDBualRWQQpB
    blltSGhNZTNoQnU1dWFydWdHMFBxNjYwMHRmWGtVdDEvYVA0RFZlN21KeGxjUzA0RU5hVUNTQ0hp
    bFYza2t3CmVPUG1qM01sRzhRL205eWdrdTBqNlFGYUxKdmlLL0dTOFZZZU1wRGVsRFFHUllzQmY4
    UzBiRzREd3J0bG1Sci8KQkQ0OWJTdUZNSUQ2NVRGdEh0UzU4aGRuU05WaC9NVWlNWGw4UlFJREFR
    QUJBb0lCQUhxZ3owT3lLYmpCRnRmUwpaQUhiSVJBNERuK21temtSVHYvbGMrNDRBMXV2SW1Kbldv
    dDFKNnpBcXJzbm1XYTZnRm05aEVzbVVYcGo1QUNyClJYS3Y1SktBcU9yL0JnRGM1WUtrLzlEYS9y
    YXJDRDUrdzYvZHoycEMxYWNka0RMdEN1MVhUWnZWVk50Q2QyM0sKS2lzb0cwRmlxdHVvc3A0Z3I5
    OERHMGtzRStkUUJuVXBEanNwS3pOeGVDMi9UVjY4SDlUOGFzekxqbldyMFJuZQpWYmxxeGE0K2VR
    OGJLWHJQNGk4alZNSHRpK0pEc1d4SWc0NWIvV3pTSGtvZWJzNUNtb01jMGhuTkkzaE1DaFlJCjBo
    ckRmY2ZuVUNvK2VlRm5VMmFLRE5vQWpOVmtTT29YOFFOeTk2ODh4R1pKcE1UbmVXNkpmU2tmUFlK
    S24vbmIKTERSS1lVRUNnWUVBL1Bob0FLRXpLcHI0QWc1WE5wZFhDUjlWbUEyWHB3aGtCV3lqWVhv
    M3pGQXkwTVlTUkRJcgplK1drMXdqclhuaEk0VGVSNi8yTVNyZlcwMjdudFVOMVEyRzhOUFMxb3Y5
    MnN2VlByM3E3Y2FFdkttZlVpN0c4CjZVSVY3MnNyWXMydG0rNHVvNXBrbERZd0JKNzlyQ0Z4bERF
    WjN0c1NoYzFnUjllY3lGTUZSTlVDZ1lFQTdtWEYKSjhGd0ZEZmpVcXFOYlBHYlhnSlBBSEMwNW5H
    cjFNSFgxSlBVbTMrWEN2UGhnT0w0SGxyQnlGUVBjTlg1S1VuVwp4elAxdEkzdWxid3FEcit0dlJE
    V3VkSXlGbFRwckxINy9RWnYzZlRhdUlXQVExTjZuU05xU3RiRERjK25JMGtVClROdzRKS3RuY1dN
    cEF1RTVNVW5iaEFCRmRwZENSSS9UaUZTWDBiRUNnWUJMQXJtTUhrQ1d6SmJudlNyZE5Da0oKdW5I
    ZUFZSExkTEI3NzBmTytyZWE3Tmowa1JjUGc3VGpLeWdpM3pFenRRVWZTeVFJendrUGlzMjNxallv
    eUpUMwo0djQwMGE4ZVl4UG1ZdGs3Rm5DSWRCd1JQZktIYmErdmx2bjhJVklmSFEveW9jRFFvRkpj
    cEdpK3BncGdSUlp4CnM5R1JCSExNbkNhRmh3aWxXZ0RBOVFLQmdBYWJHMU4yc0x4ZXNCWGlVL2pv
    MlAxSjR4YUlDUHM1dXlFeUhlRHUKRjc0WFV3QWlzZVQ0WlJleVBCeG85K1NRaVU3emxOZ0FRSmE0
    T0J3K0VveEdFM0podlJGNUdabzAwQ1RRNmNLaApJd2hyZUlRVWJ2RnVwcjhqOUJZT3pXamNrQzBT
    SVZYZjVFNWYwWVg2MFhBYS9aSzRFVFVmTE0yVWMybWk4cUdjCmRuaUJBb0dCQUtvQ2U0RlQybTdY
    MzJld2NyeElOenNaWURHOXdENllKQmg4QjJ6SHMwSzBUZUZ4b1cyTUxtUFIKYUlSbUc0a3ppVGEv
    SkdnbWVtYWhWYm1PTFZkRDI3K1RzSEVsK0hUR0E0b3A4RUFycFdqODhNV0FPMUUwM0o5NwpwcGQ0
    OUVMSnhQQXpCK20wci8rcnVsa3BmQ3k0VXUwKytQTVBaTG95eW1Mc3pCT3ZibC9FCi0tLS0tRU5E
    IFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: myapp-nginx-conf
  namespace: ingress-nginx-https-demo
data:
  nginx.conf: |-
    server {
      listen     80;
      server_tokens on;
      location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
      }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: myapp-nginx-conf-html
  namespace: ingress-nginx-https-demo
data:
  index.html: |-
    <!DOCTYPE html>
    <html>
    <head>
    </head>
    <body>
      hello world, k8s ingress https
    </body>
    </html>

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: ingress-nginx-https-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
      release: stable
  template:
    metadata:
      labels:
        app: myapp
        release: stable
    spec:
      containers:
      - name: myapp
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
        - name: myapp
          containerPort: 80
        volumeMounts:
        - name: conf
          mountPath: /etc/nginx/conf.d/
        - name: index-html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: conf
        configMap:
          name: myapp-nginx-conf
      - name: index-html
        configMap:
          name: myapp-nginx-conf-html

---
apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: ingress-nginx-https-demo
spec:
  selector:
    app: myapp
    release: stable
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 80
    nodePort: 31443
    # curl -k `kubectl get ingress -n ingress-nginx-https-demo myapp | grep myapp | awk '{print $4}'` -H "HOST:demo.forsrc.com"
    # curl -k https://172.7.0.10:32443 -H "HOST:demo.forsrc.com" 
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: myapp
  namespace: ingress-nginx-https-demo
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - demo.forsrc.com
    secretName: myapp
  rules:
  - host: demo.forsrc.com
    http:
      paths:
      - path: /
        backend:
          serviceName: myapp
          servicePort: 80
